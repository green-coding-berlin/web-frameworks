  FROM php:8.3-fpm

RUN apt-get -qq update
RUN apt-get -qy install libzip-dev  nginx 

WORKDIR /usr/src/app

RUN docker-php-ext-install zip opcache

  ENV APP_ENV=production
  ENV APP_DEBUG=false
  ENV APP_KEY=base64:txfHNf/SOo222Rm8I39Urb9SmvUy+nuAF98t/ukF0lk=




ENV EVENT_EXT_FILE /usr/local/etc/php/conf.d/docker-php-ext-event.ini
RUN if [ -f "${EVENT_EXT_FILE}" ] ; then \
  rm -fr /usr/local/etc/php/conf.d/docker-php-ext-sockets.ini ; \
  sed -i -e '1i extension=sockets.so' /usr/local/etc/php/conf.d/docker-php-ext-event.ini ; fi
  

  COPY 'bootstrap/app.php' 'bootstrap/app.php'
  COPY 'app/Providers/RouteServiceProvider.php' 'app/Providers/RouteServiceProvider.php'
  COPY 'app/Exceptions/Handler.php' 'app/Exceptions/Handler.php'
  COPY 'app/Http/Controllers/UserController.php' 'app/Http/Controllers/UserController.php'
  COPY 'app/Http/Controllers/Controller.php' 'app/Http/Controllers/Controller.php'
  COPY 'app/Http/Controllers/ApplicationController.php' 'app/Http/Controllers/ApplicationController.php'
  COPY 'app/Http/Kernel.php' 'app/Http/Kernel.php'
  COPY 'app/Console/Kernel.php' 'app/Console/Kernel.php'
  COPY 'config/hashing.php' 'config/hashing.php'
  COPY 'config/auth.php' 'config/auth.php'
  COPY 'config/app.php' 'config/app.php'
  COPY 'config/mail.php' 'config/mail.php'
  COPY 'config/services.php' 'config/services.php'
  COPY 'config/database.php' 'config/database.php'
  COPY 'config/cache.php' 'config/cache.php'
  COPY 'config/session.php' 'config/session.php'
  COPY 'config/queue.php' 'config/queue.php'
  COPY 'config/broadcasting.php' 'config/broadcasting.php'
  COPY 'config/view.php' 'config/view.php'
  COPY 'config/logging.php' 'config/logging.php'
  COPY 'config/filesystems.php' 'config/filesystems.php'
  COPY 'public/index.php' 'public/index.php'
  COPY 'routes/channels.php' 'routes/channels.php'
  COPY 'routes/console.php' 'routes/console.php'
  COPY 'routes/web.php' 'routes/web.php'
  COPY 'routes/api.php' 'routes/api.php'
  COPY 'composer.json' 'composer.json'
  COPY 'artisan' 'artisan'


    RUN curl -sSL https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    RUN composer install --no-dev --prefer-dist --classmap-authoritative
    RUN composer dumpautoload -o
    RUN mkdir bootstrap/cache -p
    RUN mkdir storage/framework/sessions -p
    RUN mkdir storage/framework/views -p
    RUN mkdir storage/framework/cache -p
    RUN chown -R www-data:www-data /usr/src/app
    RUN find /usr/src/app -type f -exec chmod 644 {} \;
    RUN find /usr/src/app -type d -exec chmod 755 {} \;
    RUN chmod -R ug+rwx storage /usr/src/app/bootstrap/cache
    RUN php artisan config:cache
    RUN php artisan route:cache


    RUN sed -i 's/\;prefix.*/prefix = \/usr\/src\/app\/public/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\(listen =\).*/\1 \/var\/run\/php-fpm.sock/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.owner.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.group.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.mode.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  # pm.max_children set according to nproc
  RUN if [ $(nproc) = 1 ] ; then sed -i 's/\(pm\.max_children =\).*/\1 512/g' /usr/local/etc/php-fpm.d/www.conf ; else sed -i 's/\(pm\.max_children =\).*/\1 1024/g' /usr/local/etc/php-fpm.d/www.conf ; fi 
  # after 15 seconds warm-up, half of the 'idle' children are not killed
  RUN if [ $(nproc) = 1 ] ; then sed -i 's/\(pm\.max_spare_servers =\).*/\1 256/g' /usr/local/etc/php-fpm.d/www.conf ; else sed -i 's/\(pm\.max_spare_servers =\).*/\1 512/g' /usr/local/etc/php-fpm.d/www.conf ; fi 
  
  RUN rm -fr /usr/local/etc/php-fpm.d/zz-docker.conf
  
  RUN echo 'server {\n\
        root /usr/src/app/public;\n\
      listen 0.0.0.0:3000;\n\
        location / {\n\
          try_files $uri $uri/ /index.php;\n\
          fastcgi_pass unix:/var/run/php-fpm.sock;\n\
          fastcgi_param   SCRIPT_FILENAME         $document_root/index.php;\n\
          include fastcgi_params;\n\
        }\n\
  }\n'\
  > /etc/nginx/conf.d/server.conf
  
  RUN echo 'opcache.enable=1\n\
  opcache.memory_consumption=512\n\
  opcache.interned_strings_buffer=64\n\
  opcache.max_accelerated_sources=32531\n\
  opcache.validate_timestamps=0\n\
  opcache.save_comments=1\n\
  opcache.fast_shutdown=0\n'\
  >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
  
  CMD /usr/local/sbin/php-fpm --daemonize; nginx -g "daemon off;"


