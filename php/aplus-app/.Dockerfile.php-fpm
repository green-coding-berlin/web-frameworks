  FROM php:8.3-fpm

RUN apt-get -qq update
RUN apt-get -qy install libzip-dev  nginx 

WORKDIR /usr/src/app

RUN docker-php-ext-install zip opcache


  RUN apt-get -qy install libsodium-dev
  RUN apt-get -qy install memcached
  RUN apt-get -qy install libz-dev
  RUN apt-get -qy install libmemcached-tools
  RUN apt-get -qy install libmemcached-dev
  RUN apt-get -qy install libssl-dev
  RUN apt-get -qy install libyaml-dev
  RUN apt-get -qy install libicu-dev
  RUN apt-get -qy install libpng-dev

  RUN docker-php-ext-install sodium
  RUN docker-php-ext-install mysqli
  RUN docker-php-ext-install intl
  RUN docker-php-ext-install gd

  RUN mkdir -p /usr/src/php/ext/igbinary
  RUN curl -fsSL https://pecl.php.net/get/igbinary | tar xvz -C "/usr/src/php/ext/igbinary" --strip 1
  RUN docker-php-ext-install igbinary
  RUN mkdir -p /usr/src/php/ext/memcached
  RUN curl -fsSL https://pecl.php.net/get/memcached | tar xvz -C "/usr/src/php/ext/memcached" --strip 1
  RUN docker-php-ext-install memcached
  RUN mkdir -p /usr/src/php/ext/msgpack
  RUN curl -fsSL https://pecl.php.net/get/msgpack | tar xvz -C "/usr/src/php/ext/msgpack" --strip 1
  RUN docker-php-ext-install msgpack
  RUN mkdir -p /usr/src/php/ext/redis
  RUN curl -fsSL https://pecl.php.net/get/redis | tar xvz -C "/usr/src/php/ext/redis" --strip 1
  RUN docker-php-ext-install redis
  RUN mkdir -p /usr/src/php/ext/yaml
  RUN curl -fsSL https://pecl.php.net/get/yaml | tar xvz -C "/usr/src/php/ext/yaml" --strip 1
  RUN docker-php-ext-install yaml

ENV EVENT_EXT_FILE /usr/local/etc/php/conf.d/docker-php-ext-event.ini
RUN if [ -f "${EVENT_EXT_FILE}" ] ; then \
  rm -fr /usr/local/etc/php/conf.d/docker-php-ext-sockets.ini ; \
  sed -i -e '1i extension=sockets.so' /usr/local/etc/php/conf.d/docker-php-ext-event.ini ; fi
  

  COPY 'App.php' 'App.php'
  COPY 'app/Controllers/User.php' 'app/Controllers/User.php'
  COPY 'app/Controllers/Home.php' 'app/Controllers/Home.php'
  COPY 'boot/init.php' 'boot/init.php'
  COPY 'boot/app.php' 'boot/app.php'
  COPY 'boot/constants.php' 'boot/constants.php'
  COPY 'boot/routes.php' 'boot/routes.php'
  COPY 'boot/helpers.php' 'boot/helpers.php'
  COPY 'config/logger.php' 'config/logger.php'
  COPY 'config/mailer.php' 'config/mailer.php'
  COPY 'config/migrator.php' 'config/migrator.php'
  COPY 'config/response.php' 'config/response.php'
  COPY 'config/database.php' 'config/database.php'
  COPY 'config/cache.php' 'config/cache.php'
  COPY 'config/session.php' 'config/session.php'
  COPY 'config/debugger.php' 'config/debugger.php'
  COPY 'config/locator.php' 'config/locator.php'
  COPY 'config/request.php' 'config/request.php'
  COPY 'config/exceptionHandler.php' 'config/exceptionHandler.php'
  COPY 'config/console.php' 'config/console.php'
  COPY 'config/view.php' 'config/view.php'
  COPY 'config/language.php' 'config/language.php'
  COPY 'config/router.php' 'config/router.php'
  COPY 'config/validation.php' 'config/validation.php'
  COPY 'config/antiCsrf.php' 'config/antiCsrf.php'
  COPY 'config/autoloader.php' 'config/autoloader.php'
  COPY 'public/index.php' 'public/index.php'
  COPY 'composer.json' 'composer.json'


    RUN curl -sSL https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    RUN composer install --no-dev --prefer-dist --classmap-authoritative
    RUN composer dumpautoload -o
    RUN mkdir -p storage/logs
    RUN chown -R www-data:www-data storage/logs


    RUN sed -i 's/\;prefix.*/prefix = \/usr\/src\/app\/public/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\(listen =\).*/\1 \/var\/run\/php-fpm.sock/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.owner.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.group.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  RUN sed -i 's/\;\(listen\.mode.*\).*/\1/g' /usr/local/etc/php-fpm.d/www.conf
  # pm.max_children set according to nproc
  RUN if [ $(nproc) = 1 ] ; then sed -i 's/\(pm\.max_children =\).*/\1 512/g' /usr/local/etc/php-fpm.d/www.conf ; else sed -i 's/\(pm\.max_children =\).*/\1 1024/g' /usr/local/etc/php-fpm.d/www.conf ; fi 
  # after 15 seconds warm-up, half of the 'idle' children are not killed
  RUN if [ $(nproc) = 1 ] ; then sed -i 's/\(pm\.max_spare_servers =\).*/\1 256/g' /usr/local/etc/php-fpm.d/www.conf ; else sed -i 's/\(pm\.max_spare_servers =\).*/\1 512/g' /usr/local/etc/php-fpm.d/www.conf ; fi 
  
  RUN rm -fr /usr/local/etc/php-fpm.d/zz-docker.conf
  
  RUN echo 'server {\n\
        root /usr/src/app/public;\n\
      listen 0.0.0.0:3000;\n\
        location / {\n\
          try_files $uri $uri/ /index.php;\n\
          fastcgi_pass unix:/var/run/php-fpm.sock;\n\
          fastcgi_param   SCRIPT_FILENAME         $document_root/index.php;\n\
          include fastcgi_params;\n\
        }\n\
  }\n'\
  > /etc/nginx/conf.d/server.conf
  
  RUN echo 'opcache.enable=1\n\
  opcache.memory_consumption=512\n\
  opcache.interned_strings_buffer=64\n\
  opcache.max_accelerated_sources=32531\n\
  opcache.validate_timestamps=0\n\
  opcache.save_comments=1\n\
  opcache.fast_shutdown=0\n'\
  >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
  
  CMD /usr/local/sbin/php-fpm --daemonize; nginx -g "daemon off;"


